-- MySQL Script generated by MySQL Workbench
-- Mon Apr  9 08:38:59 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema qa
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema qa
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `qa` DEFAULT CHARACTER SET utf8 ;
USE `qa` ;

-- -----------------------------------------------------
-- Table `qa`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`user` (
  `id` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`question` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `up_vote` INT NOT NULL DEFAULT 0,
  `dwon_vote` INT NOT NULL DEFAULT 0,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_question_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_question_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `qa`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`answer` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `question_id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `up_vote` INT NOT NULL DEFAULT 0,
  `down_vote` INT NOT NULL DEFAULT 0,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_answer_user1_idx` (`user_id` ASC),
  INDEX `fk_answer_question1_idx` (`question_id` ASC),
  CONSTRAINT `fk_anser_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `qa`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_anser_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `qa`.`question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`question_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`question_category` (
  `id` INT NOT NULL,
  `question_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_question_category_question1_idx` (`question_id` ASC),
  INDEX `fk_question_category_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_question_category_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `qa`.`question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_category_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `qa`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`user_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`user_category` (
  `id` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  INDEX `fk_user_category_user1_idx` (`user_id` ASC),
  INDEX `fk_user_category_category1_idx` (`category_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_category_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `qa`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_category_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `qa`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qa`.`user_vote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `qa`.`user_vote` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `question_id` INT NOT NULL,
  `answer_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_vote_user1_idx` (`user_id` ASC),
  INDEX `fk_user_vote_question1_idx` (`question_id` ASC),
  INDEX `fk_user_vote_answer1_idx` (`answer_id` ASC),
  CONSTRAINT `fk_user_vote_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `qa`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_vote_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `qa`.`question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_vote_anser1`
    FOREIGN KEY (`answer_id`)
    REFERENCES `qa`.`answer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
